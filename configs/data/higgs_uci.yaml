# HIGGS UCI Dataset Configuration
# ================================
# This config is for the HIGGS dataset from UCI Machine Learning Repository
# Perfect example for High Energy Physics binary classification

block: ingest.csv

# === REQUIRED SETTINGS ===
file_path: "data/HIGGS_100k.csv"  # Path to your CSV file (relative to project root)
target_column: "label"             # Column containing the target/label

# === AUTO-DOWNLOAD SETTINGS ===
auto_download: true                # Automatically download dataset if not found
download_url: "https://archive.ics.uci.edu/ml/machine-learning-databases/00280/HIGGS.csv.gz"
download_info:
  description: "HIGGS UCI Dataset - High Energy Physics binary classification"
  source: "UCI Machine Learning Repository"
  size_mb: 2900  # Approximate size in MB
  samples: 11000000  # Full dataset size
  note: "We'll use first 100k samples for faster processing"

# === DATASET STRUCTURE ===
has_header: true                   # The downloaded file has headers (added during processing)
separator: ","                     # CSV separator (auto-detected if not specified)
encoding: "utf-8"                  # File encoding

# Column names for HIGGS dataset (29 columns total) - defined in the downloaded file headers
# column_names not needed since has_header: true means we use the headers from the file
  # - "m_jj"                         # Invariant mass of two jets
  # - "m_jjj"                        # Invariant mass of three jets
  # - "m_lv"                         # Invariant mass of lepton and neutrino
  # - "m_jlv"                        # Invariant mass of jet, lepton and neutrino
  # - "m_bb"                         # Invariant mass of b-tagged jets
  # - "m_wbb"                        # Invariant mass of W boson and b-tagged jets
  # - "m_wwbb"                       # Invariant mass of two W bosons and b-tagged jets

# === DATA SAMPLING (Optional) ===
nrows: 100000                      # Limit to first 100k rows for faster processing
# sample_fraction: 0.1             # Alternative: use 10% random sample
# skip_rows: 0                     # Skip rows at the beginning

# === TARGET PROCESSING ===
target_type: "binary"              # Task type: binary classification
positive_class_labels: [1]         # Values representing positive class (signal)

# === DATA PREPROCESSING ===
missing_values: ["", "NA", "NaN", "null", "NULL", "-999"]  # Values to treat as missing
drop_missing_threshold: 0.5        # Drop columns with >50% missing values

# === ADVANCED OPTIONS ===
validation: true                   # Perform data validation
verbose: true                      # Print detailed information during loading
